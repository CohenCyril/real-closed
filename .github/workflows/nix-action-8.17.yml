jobs:
  coq:
    needs: []
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coq
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"coq\" \\\n   --dry-run 2>&1 > /dev/null)\n\
        echo $nb_dry_run\necho status=$(echo $nb_dry_run | grep \"built:\" | sed \"\
        s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
  coqeal:
    needs:
    - coq
    - multinomials
    - mathcomp-real-closed
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coqeal
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"coqeal\" \\\n   --dry-run 2>&1 > /dev/null)\n\
        echo $nb_dry_run\necho status=$(echo $nb_dry_run | grep \"built:\" | sed \"\
        s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: bignums'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "bignums"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: paramcoq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "paramcoq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: multinomials'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "multinomials"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-real-closed'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-real-closed"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coqeal"
  mathcomp:
    needs:
    - coq
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"mathcomp\" \\\n   --dry-run 2>&1 > /dev/null)\n\
        echo $nb_dry_run\necho status=$(echo $nb_dry_run | grep \"built:\" | sed \"\
        s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-solvable'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-solvable"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-character'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-character"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: hierarchy-builder'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "hierarchy-builder"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp"
  mathcomp-abel:
    needs:
    - coq
    - mathcomp-real-closed
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-abel
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"mathcomp-abel\" \\\n   --dry-run 2>&1 > /dev/null)\n\
        echo $nb_dry_run\necho status=$(echo $nb_dry_run | grep \"built:\" | sed \"\
        s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-real-closed'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-real-closed"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-abel"
  mathcomp-algebra-tactics:
    needs:
    - coq
    - mathcomp-zify
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-algebra-tactics
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"mathcomp-algebra-tactics\" \\\n   --dry-run\
        \ 2>&1 > /dev/null)\necho $nb_dry_run\necho status=$(echo $nb_dry_run | grep\
        \ \"built:\" | sed \"s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-elpi'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq-elpi"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-zify'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-zify"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-algebra-tactics"
  mathcomp-apery:
    needs:
    - coq
    - coqeal
    - mathcomp-real-closed
    - mathcomp-bigenough
    - mathcomp-zify
    - mathcomp-algebra-tactics
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-apery
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"mathcomp-apery\" \\\n   --dry-run 2>&1 >\
        \ /dev/null)\necho $nb_dry_run\necho status=$(echo $nb_dry_run | grep \"built:\"\
        \ | sed \"s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coqeal'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coqeal"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-real-closed'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-real-closed"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-bigenough'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-bigenough"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-zify'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-zify"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra-tactics'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-algebra-tactics"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-apery"
  mathcomp-bigenough:
    needs:
    - coq
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-bigenough
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"mathcomp-bigenough\" \\\n   --dry-run 2>&1\
        \ > /dev/null)\necho $nb_dry_run\necho status=$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-bigenough"
  mathcomp-finmap:
    needs:
    - coq
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-finmap
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"mathcomp-finmap\" \\\n   --dry-run 2>&1 >\
        \ /dev/null)\necho $nb_dry_run\necho status=$(echo $nb_dry_run | grep \"built:\"\
        \ | sed \"s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-finmap"
  mathcomp-real-closed:
    needs:
    - coq
    - mathcomp-bigenough
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-real-closed
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"mathcomp-real-closed\" \\\n   --dry-run 2>&1\
        \ > /dev/null)\necho $nb_dry_run\necho status=$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-solvable'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-solvable"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-bigenough'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-bigenough"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-real-closed"
  mathcomp-zify:
    needs:
    - coq
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-zify
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"mathcomp-zify\" \\\n   --dry-run 2>&1 > /dev/null)\n\
        echo $nb_dry_run\necho status=$(echo $nb_dry_run | grep \"built:\" | sed \"\
        s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-zify"
  multinomials:
    needs:
    - coq
    - mathcomp-finmap
    - mathcomp-bigenough
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to initially checkout
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"target_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  echo \"target_commit=${{ github.event.pull_request.head.sha\
        \ }}\" >> $GITHUB_ENV\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.target_commit }}
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  mergeable=$(git merge --no-commit --no-ff ${{ github.event.pull_request.base.sha\
        \ }} > /dev/null 2>&1; echo $?; git merge --abort > /dev/null 2>&1 || true)\n\
        \  if [ -z \"$merge_commit\" -o \"x$mergeable\" != \"x0\" ]; then\n    echo\
        \ \"tested_commit=${{ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n\
        \  else\n    echo \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v20
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v12
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target multinomials
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"8.17\" --argstr job \"multinomials\" \\\n   --dry-run 2>&1 > /dev/null)\n\
        echo $nb_dry_run\necho status=$(echo $nb_dry_run | grep \"built:\" | sed \"\
        s/.*/built/\") >> $GITHUB_OUTPUT\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-finmap'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-finmap"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-bigenough'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "mathcomp-bigenough"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.17" --argstr
        job "multinomials"
name: Nix CI for bundle 8.17
'on':
  pull_request:
    paths:
    - .github/workflows/nix-action-8.17.yml
  pull_request_target:
    paths-ignore:
    - .github/workflows/nix-action-8.17.yml
    types:
    - opened
    - synchronize
    - reopened
  push:
    branches:
    - master
